// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Default Suite', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Test 1', async function() {
    await driver.get("https://it-314-project-g15.vercel.app/")
    await driver.manage().window().setRect(1382, 736)
    await driver.findElement(By.css(".timeline-2:nth-child(1) .mb-0:nth-child(5)")).click()
    await driver.findElement(By.css(".timeline-2:nth-child(1) .card-body")).click()
    await driver.findElement(By.css(".col-md-6:nth-child(1) .btn")).click()
    await driver.executeScript("window.scrollTo(0,1000)")
    await driver.findElement(By.linkText("Back To Top")).click()
    await driver.findElement(By.linkText("Privacy Policy")).click()
    await driver.findElement(By.linkText("Back To Top")).click()
    await driver.findElement(By.css(".fa-address-card > path")).click()
    await driver.executeScript("window.scrollTo(0,0)")
    await driver.findElement(By.linkText("User")).click()
    await driver.findElement(By.css(".optional-btn")).click()
    {
      const element = await driver.findElement(By.css(".optional-btn"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.id("input-username")).click()
    await driver.findElement(By.id("input-username")).sendKeys("newUser")
    await driver.findElement(By.id("input-email")).sendKeys("newUsergmail.com")
    await driver.findElement(By.id("flexRadioDefault2")).click()
    await driver.findElement(By.id("input-password")).click()
    await driver.findElement(By.id("input-password")).sendKeys("Qwert12345!")
    await driver.findElement(By.id("input-conf-password")).click()
    await driver.findElement(By.id("input-conf-password")).sendKeys("Qwert12345!")
    await driver.findElement(By.css(".input-btn")).click()
    {
      const element = await driver.findElement(By.id("admin-login-from-id"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.id("admin-login-from-id"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.id("admin-login-from-id"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.id("admin-login-from-id")).click()
    await driver.findElement(By.id("input-email")).click()
    await driver.findElement(By.id("input-email")).click()
    await driver.findElement(By.id("input-email")).sendKeys("newUser@gmail.com")
    await driver.findElement(By.id("input-conf-password")).click()
    await driver.findElement(By.id("input-conf-password")).sendKeys("Qwert12345")
    await driver.findElement(By.css(".input-btn")).click()
    assert(await driver.switchTo().alert().getText() == "Passwords do not match")
    await driver.findElement(By.id("input-conf-password")).click()
    await driver.findElement(By.id("input-conf-password")).sendKeys("Qwert12345!")
    await driver.findElement(By.css(".input-btn")).click()
    await driver.findElement(By.id("dropdown-basic")).click()
    await driver.executeScript("window.scrollTo(0,92.54995727539062)")
    await driver.findElement(By.css(".text-dark > .dropdown-item")).click()
    await driver.findElement(By.css(".profileUserName")).click()
    await driver.findElement(By.css(".confTypes")).click()
    await driver.findElement(By.css(".fa-address-card > path")).click()
    await driver.findElement(By.css(".fa-bars")).click()
    await driver.executeScript("window.scrollTo(0,92)")
    await driver.findElement(By.css(".col-md-6:nth-child(1) .btn")).click()
    await driver.executeScript("window.scrollTo(0,1000)")
    await driver.findElement(By.css(".col-md-6:nth-child(3) .btn")).click()
    await driver.executeScript("window.scrollTo(0,1000)")
    await driver.findElement(By.css(".col-md-6:nth-child(2) .btn")).click()
    {
      const element = await driver.findElement(By.id("logo-ctn"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.executeScript("window.scrollTo(0,1000)")
  })
})
